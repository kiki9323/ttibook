@mixin blind {
  overflow: hidden;
  position: absolute;
  clip: rect(0, 0, 0, 0);
  width: 1px;
  height: 1px;
  margin: -1px !important;
  padding: 0 !important;
}

@mixin clearfix {
  &::before,
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

@mixin placeholder() {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

@mixin fonts($size: $initial-font-size, $lineHeight: false, $bold: false) {
  @if unitless($size) {
    $size: 1px * $size;
  }

  font-size: $size;

  @if $lineHeight {
    @if $lineHeight=='normal' {
      line-height: normal;
    }

    @else {
      line-height: 1px * $lineHeight;
    }
  }

  @if $bold {
    font-weight: $bold;
  }
}

@mixin ellipsis($lines: 1,
$display: block,
$width: null,
$max-width: null,
$overflow: hidden) {
  @if ($lines <=1) {
    display: $display;
    overflow: $overflow;
    width: $width;
    max-width: $max-width;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    word-break: break-all;
  }

  @else {
    display: $display; // fallback
    display: -webkit-box;
    overflow: $overflow;
    width: $width;
    max-width: $max-width;
    text-overflow: ellipsis;
    white-space: normal;
    word-wrap: break-word;
    word-break: normal;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin transition($properties...) {
  @if length($properties)>=1 {
    transition: $properties;
  }

  @else {
    transition: all ease-in-out .6s 0s;
  }
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin position-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin hide-webkit-scroll {
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin notch-bottom {
  padding-bottom: constant(safe-area-inset-bottom);
  padding-bottom: env(safe-area-inset-bottom);
}


@mixin lang($type: 'ko') {
  html[lang="#{$type}"] {
    @content;
  }
}
